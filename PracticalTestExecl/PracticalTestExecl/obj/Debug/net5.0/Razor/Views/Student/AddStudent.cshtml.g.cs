#pragma checksum "C:\Users\Athula\source\repos\PracticalTestExecl\PracticalTestExecl\Views\Student\AddStudent.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a3cbfc79523388a1e16ec0aa1c459b1eca0f4ff8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Student_AddStudent), @"mvc.1.0.view", @"/Views/Student/AddStudent.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a3cbfc79523388a1e16ec0aa1c459b1eca0f4ff8", @"/Views/Student/AddStudent.cshtml")]
    public class Views_Student_AddStudent : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Athula\source\repos\PracticalTestExecl\PracticalTestExecl\Views\Student\AddStudent.cshtml"
  
    Layout = "~/Pages/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<div id=""app"">
  
    <div id=""accordion"">
        <div class=""card"">
            <div class=""card-header"" id=""headingOne"">
                <h5 class=""mb-0"">
                    <button class=""btn btn-link"" data-toggle=""collapse"" data-target=""#collapseOne"" aria-expanded=""true"" aria-controls=""collapseOne"">
                        Personal Information
                    </button>
                </h5>
            </div>

            <div id=""collapseOne"" class=""collapse show"" aria-labelledby=""headingOne"" data-parent=""#accordion"">
                <div class=""card-body"">
                    <div class=""form-row"">
                        <div class=""form-group col-md-6"">
                            <label for=""inputEmail4"">First Name</label>
                            <input v-model=""inputModel.firstName"" type=""text"" class=""form-control""");
            BeginWriteAttribute("id", " id=\"", 923, "\"", 928, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""First Name"">
                            <span class=""text-danger"">{{this.errors?.find(x => x.key == ""firstName"")?.value}}</span>
                        </div>
                        <div class=""form-group col-md-6"">
                            <label for=""inputPassword4"">Last Name</label>
                            <input v-model=""inputModel.lastName"" type=""text"" class=""form-control""");
            BeginWriteAttribute("id", " id=\"", 1338, "\"", 1343, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""Last Name"">
                            <span class=""text-danger"">{{this.errors?.find(x => x.key == ""lastName"")?.value}}</span>
                        </div>
                    </div>

                    <div class=""form-row"">
                        <div class=""form-group col-md-6"">
                            <label for=""inputEmail4"">Date of Birth</label>
                            <input v-model=""inputModel.dob"" class=""form-control"" type=""date"" id=""birthday"" name=""birthday"">
                            <span class=""text-danger"">{{this.errors?.find(x => x.key == ""dob"")?.value}}</span>
                        </div>
                        <div class=""form-group col-md-6"">
                            <label for=""inputPassword4"">Gender</label>
                            <select v-model=""inputModel.gender"" class=""form-control"">
                                <option disabled selected value=""0"">Please select</option>
                                <option value=""1"">Male</opti");
            WriteLiteral(@"on>
                                <option value=""2"">Female</option>
                            </select>
                            <span class=""text-danger"">{{this.errors?.find(x => x.key == ""gender"")?.value}}</span>
                        </div>
                    </div>
                    <div class=""form-row"">
                        <div class=""form-group col-md-6"">
                            <label for=""inputEmail4"">Email</label>
                            <input v-model=""inputModel.email"" type=""email"" class=""form-control""");
            BeginWriteAttribute("id", " id=\"", 2920, "\"", 2925, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""Email"">
                            <span class=""text-danger"">{{this.errors?.find(x => x.key == ""email"")?.value}}</span>
                        </div>
                        <div class=""form-group col-md-6"">
                            <label");
            BeginWriteAttribute("for", " for=\"", 3188, "\"", 3194, 0);
            EndWriteAttribute();
            WriteLiteral(@">Status</label>
                            <select v-model=""inputModel.statusId"" class=""form-control"">
                                <option disabled selected value=""0"">Please select</option>
                                <option v-for=""item in statusList"" v-bind:value=""item.id"">{{item.name}}</option>
                            </select>
                            <span class=""text-danger"">{{this.errors?.find(x => x.key == ""statusId"")?.value}}</span>
                        </div>
                    </div>
                    <div class=""form-row"">
                        <div class=""form-group col-md-6"">
                            <label for=""inputEmail4"">Exclusion</label>
                            <input v-model=""inputModel.exclusion"" type=""text"" class=""form-control""");
            BeginWriteAttribute("id", " id=\"", 3996, "\"", 4001, 0);
            EndWriteAttribute();
            WriteLiteral(" placeholder=\"Exclusion\">\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label");
            BeginWriteAttribute("for", " for=\"", 4154, "\"", 4160, 0);
            EndWriteAttribute();
            WriteLiteral(@">Ethnicity</label>
                            <select v-model=""inputModel.ethnicityId"" class=""form-control"">
                                <option disabled selected value=""0"">Please select</option>
                                <option v-for=""item in ethnicityList"" v-bind:value=""item.id"">{{item.name}}</option>
                            </select>
                            <span class=""text-danger"">{{this.errors?.find(x => x.key == ""ethnicityId"")?.value}}</span>
                        </div>
                    </div>
                    <h6>Hs Information</h6>
                    <div class=""form-row"">
                        <div class=""form-group col-md-6"">
                            <label for=""inputEmail4"">City</label>
                            <select v-model=""inputModel.city"" class=""form-control"">
                                <option disabled selected");
            BeginWriteAttribute("value", " value=\"", 5058, "\"", 5066, 0);
            EndWriteAttribute();
            WriteLiteral(@">Please select</option>
                                <option v-for=""item in cityList"" v-bind:value=""item"">{{item}}</option>
                            </select>
                            <span class=""text-danger"">{{this.errors?.find(x => x.key == ""city"")?.value}}</span>
                        </div>
                        <div class=""form-group col-md-6"">
                            <label for=""inputPassword4"">State</label>
                            <select v-model=""inputModel.state"" class=""form-control"">
                                <option disabled selected");
            BeginWriteAttribute("value", " value=\"", 5653, "\"", 5661, 0);
            EndWriteAttribute();
            WriteLiteral(@">Please select</option>
                                <option v-for=""item in stateList"" v-bind:value=""item"">{{item}}</option>
                            </select>
                            <span class=""text-danger"">{{this.errors?.find(x => x.key == ""state"")?.value}}</span>
                        </div>
                    </div>
                    <div class=""form-row"">
                        <div class=""form-group col-md-6"">
                            <label for=""inputEmail4"">Zip</label>
                            <input v-model=""inputModel.zip"" type=""number"" class=""form-control""");
            BeginWriteAttribute("id", " id=\"", 6268, "\"", 6273, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""Zip"">
                            <span class=""text-danger"">{{this.errors?.find(x => x.key == ""zip"")?.value}}</span>
                        </div>
                        <div class=""form-group col-md-6"">
                            <label for=""inputEmail4"">GPA</label>
                            <input v-model=""inputModel.gpa"" type=""text"" class=""form-control""");
            BeginWriteAttribute("id", " id=\"", 6656, "\"", 6661, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""GPA"">
                        </div>
                    </div>
                </div>
            </div>
        </div>       
        <div class=""card"">
            <div class=""card-header"" id=""headingFour"">
                <h5 class=""mb-0"">
                    <button class=""btn btn-link collapsed"" data-toggle=""collapse"" data-target=""#collapseFour"" aria-expanded=""false"" aria-controls=""collapseFour"">
                        Sat Information
                    </button>
                </h5>
            </div>
            <div id=""collapseFour"" class=""collapse"" aria-labelledby=""headingFour"" data-parent=""#accordion"">
                <div class=""card-body"">
                    <div class=""form-row"">
                        <div class=""form-group col-md-6"">
                            <label for=""inputEmail4"">Combined</label>
                            <input v-model=""inputModel.sat.combined??null"" type=""number"" class=""form-control""");
            BeginWriteAttribute("id", " id=\"", 7640, "\"", 7645, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""Combined"">
                        </div>
                        <div class=""form-group col-md-6"">
                            <label for=""inputPassword4"">Math</label>
                            <input v-model=""inputModel.sat.math"" type=""number"" class=""form-control""");
            BeginWriteAttribute("id", " id=\"", 7932, "\"", 7937, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""Math"">
                        </div>
                    </div>
                    <div class=""form-row"">
                        <div class=""form-group col-md-6"">
                            <label for=""inputEmail4"">Verbal</label>
                            <input v-model=""inputModel.sat.verbal"" type=""number"" class=""form-control""");
            BeginWriteAttribute("id", " id=\"", 8293, "\"", 8298, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""Verbal"">
                        </div>
                        <div class=""form-group col-md-6"">
                            <label for=""inputPassword4"">Reading</label>
                            <input v-model=""inputModel.sat.reading"" type=""number"" class=""form-control""");
            BeginWriteAttribute("id", " id=\"", 8589, "\"", 8594, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""Reading"">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class=""card"">
            <div class=""card-header"" id=""headingFive"">
                <h5 class=""mb-0"">
                    <button class=""btn btn-link collapsed"" data-toggle=""collapse"" data-target=""#collapseFive"" aria-expanded=""false"" aria-controls=""collapseFive"">
                        Act Information
                    </button>
                </h5>
            </div>
            <div id=""collapseFive"" class=""collapse"" aria-labelledby=""headingFive"" data-parent=""#accordion"">
                <div class=""card-body"">
                    <div class=""form-row"">
                        <div class=""form-group col-md-6"">
                            <label for=""inputEmail4"">Composite</label>
                            <input v-model=""inputModel.act.composite"" type=""number"" class=""form-control""");
            BeginWriteAttribute("id", " id=\"", 9566, "\"", 9571, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""Composite"">
                        </div>
                        <div class=""form-group col-md-6"">
                            <label for=""inputPassword4"">Math</label>
                            <input v-model=""inputModel.act.math"" type=""number"" class=""form-control""");
            BeginWriteAttribute("id", " id=\"", 9859, "\"", 9864, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""Math"">
                        </div>
                    </div>
                    <div class=""form-row"">
                        <div class=""form-group col-md-6"">
                            <label for=""inputEmail4"">English</label>
                            <input v-model=""inputModel.act.english"" type=""number"" class=""form-control""");
            BeginWriteAttribute("id", " id=\"", 10222, "\"", 10227, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""English"">
                        </div>
                        <div class=""form-group col-md-6"">
                            <label for=""inputPassword4"">Reading</label>
                            <input v-model=""inputModel.act.reading"" type=""number"" class=""form-control""");
            BeginWriteAttribute("id", " id=\"", 10519, "\"", 10524, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""Reading"">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class=""card"">
            <div class=""card-header"" id=""headingSix"">
                <h5 class=""mb-0"">
                    <button class=""btn btn-link collapsed"" data-toggle=""collapse"" data-target=""#collapseSix"" aria-expanded=""false"" aria-controls=""collapseSix"">
                        Acadamic Information
                    </button>
                </h5>
            </div>
            <div id=""collapseSix"" class=""collapse"" aria-labelledby=""headingSix"" data-parent=""#accordion"">
                <div class=""card-body"">
                    <div class=""form-row"">
                        <div class=""form-group col-md-6"">
                            <label for=""inputEmail4"">Period</label>
                            <select v-model=""inputModel.acadamic.period"" class=""form-control"">
                                <option disabled selected");
            BeginWriteAttribute("value", " value=\"", 11542, "\"", 11550, 0);
            EndWriteAttribute();
            WriteLiteral(@">Please select</option>
                                <option v-for=""item in periodList"" v-bind:value=""item"">{{item}}</option>
                            </select>
                        </div>
                        <div class=""form-group col-md-6"">
                            <label for=""inputPassword4"">Entry Age</label>
                            <input v-model=""inputModel.acadamic.entryAge"" type=""text"" class=""form-control""");
            BeginWriteAttribute("id", " id=\"", 11993, "\"", 11998, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""Entry Age"">
                        </div>
                    </div>
                    <div class=""form-row"">
                        <div class=""form-group col-md-6"">
                            <label for=""inputEmail4"">Ged</label>
                            <select v-model=""inputModel.acadamic.ged"" class=""form-control"">
                                <option disabled selected value=""0"">Please select</option>
                                <option v-for=""item in gedList"" v-bind:value=""item.value"">{{item.text}}</option>
                            </select>
                        </div>
                        <div class=""form-group col-md-6"">
                            <label for=""inputPassword4"">English Second Language</label>
                            <select v-model=""inputModel.acadamic.englishSecondLang"" class=""form-control"">
                                <option disabled selected value=""0"">Please select</option>
                                <option v-for=""item");
            WriteLiteral(@" in engList"" v-bind:value=""item.value"">{{item.text}}</option>
                            </select>
                        </div>
                    </div>
                    <div class=""form-row"">
                        <div class=""form-group col-md-6"">
                            <label for=""inputEmail4"">First Generation</label>
                            <select v-model=""inputModel.acadamic.firsGeneration"" class=""form-control"">
                                <option disabled selected value=""0"">Please select</option>
                                <option v-for=""item in genList"" v-bind:value=""item.value"">{{item.text}}</option>
                            </select>
                        </div>
                        <div class=""form-group col-md-6"">

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class=""container-fluid pb-3 pt-3"">
        <button v-on:click=""Save"" type=""button"" class=""btn ");
            WriteLiteral("btn-primary\">Save</button>\r\n        <button type=\"button\" class=\"ml-3 btn btn-warning\">Clear</button>\r\n    </div>\r\n\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"


    <script>
        $('#datepicker').datepicker({
            uiLibrary: 'bootstrap'
        });
     

        var vueApp = new Vue({
            el: '#app',
            data: {
                inputModel: {
                    firstName: '',
                    lastName: '',
                    dob: '',
                    gender: 0,
                    email: '',
                    statusId: 0,
                    exclusion: '',
                    ethnicityId: 0,

                    city: '',
                    state: '',
                    zip: 0,
                    gpa: 0.0,

                    sat: {
                        combined: 0,
                        math: 0,
                        verbal: 0,
                        reading: 0,
                    },
                    act: {
                        composite: 0,
                        math: 0,
                        english: 0,
                        reading: 0,
                    },
   ");
                WriteLiteral(@"                 acadamic: {
                        period: '',
                        entryAge: 0.0,
                        ged: 0,
                        englishSecondLang: 0,
                        firsGeneration: 0,
                    },
                    
                },
                statusList: [],
                ethnicityList: [],
                cityList: [],
                stateList: [],
                periodList: [],
                gedList: [],
                engList: [],
                genList: [],

                errors: [],
            },
            mounted: function (event) {
                this.GetAllStatus();
                this.GetAllEthnicity();
                this.stateList = ['Albuquerque', 'New York', 'Pheonix', 'Seattle', 'Denver', 'Austin'];
                this.cityList = ['New Mexico', 'New York', 'Arizona', 'Washington', 'Colorado', 'Texas'];
                this.periodList = ['Fall 2008', 'Fall 2007', 'Fall 2008', 'Fall 2010'];
    ");
                WriteLiteral(@"            this.gedList = [{ text: 'True', value: 1 }, { text: 'False', value: 2 }];
                this.engList = [{ text: 'True', value: 1 }, { text: 'False', value: 2 }];
                this.genList = [{ text: 'True', value: 1 }, { text: 'False', value: 2 }];
            },
            methods: {
                Validate: function () {
                    this.errors = [];
                    var ret = true;
                    if (this.inputModel.firstName === """") {
                        this.errors.push({ key: 'firstName', value: 'Please enter first name' })
                        ret = false;
                    }
                    if (this.inputModel.lastName === """") {
                        this.errors.push({ key: 'lastName', value: 'Please enter last name' })
                        ret = false;
                    }                
                    if (this.inputModel.dob === """") {
                        this.errors.push({ key: 'dob', value: 'Please enter first name' })");
                WriteLiteral(@"
                        ret = false;
                    }
                    if (this.inputModel.email === """") {
                        this.errors.push({ key: 'email', value: 'Please enter email' })
                        ret = false;
                    }
                    if (this.inputModel.statusId === 0) {
                        this.errors.push({ key: 'statusId', value: 'Please enter status' })
                        ret = false;
                    }
                    if (this.inputModel.ethnicityId === 0) {
                        this.errors.push({ key: 'ethnicityId', value: 'Please enter ethnicity' })
                        ret = false;
                    }
                    if (this.inputModel.city === """") {
                        this.errors.push({ key: 'city', value: 'Please enter city' })
                        ret = false;
                    }
                    if (this.inputModel.state === """") {
                        this.errors.push({ key: 'state', v");
                WriteLiteral(@"alue: 'Please enter state' })
                        ret = false;
                    }                    
                    if (this.inputModel.zip === 0) {
                        this.errors.push({ key: 'zip', value: 'Please enter zip' })
                        ret = false;
                    }        

                    return ret;

                },
                ResetInput() {
                    this.markInputModel.gradeId = 0;
                    this.markInputModel.studentId = 0;
                    this.markInputModel.subjectId = 0;
                    this.markInputModel.teacherId = 0;
                    this.markInputModel.marks = 0;
                    this.markInputModel.teacherSubjectId = 0;
                },
                GetAllStatus: function () {
                    axios.get('/Status/GetAll')
                        .then((response) => {
                            this.statusList = response;
                        });
                },
           ");
                WriteLiteral(@"     GetAllEthnicity: function () {
                    axios.get('/Ethnicity/GetAll')
                        .then((response) => {
                            this.ethnicityList = response;
                        });
                },




                GetTeachersBySubject: function () {
                    this.teacherSubjectId =

                        axios.get('/Subject/GetTeachBySubjectId', {
                            params: { subjectId: this.markInputModel.subjectId }
                        })
                            .then((response) => {
                                this.teachers = response;
                            });
                },

                GetSubjects: function () {
                    axios.get('/Subject/GetAll')
                        .then((response) => {
                            this.subjects = response;
                        });
                },

                GetStudents: function () {
                    axios.get('/Stud");
                WriteLiteral(@"ent/GetByGrade', {
                        params: { gradeId: this.markInputModel.gradeId }
                    })
                        .then((response) => {
                            this.students = response;
                        });
                },

            

                GetAll: function () {
                    axios.get('/Mark/GetMarks')
                        .then((response) => {
                            var data = [];
                            $.each(response, function (index, value) {
                                var obj = {
                                    ""school"": value.student.school.name,
                                    ""address"": value.student.school.address,
                                    ""student"": value.student.name,
                                    ""dob"": value.student.dob,
                                    ""grade"": value.student.grade.name,
                                    ""subject"": value.teacherSubject.subject.name,
   ");
                WriteLiteral(@"                                 ""marks"": value.marks,
                                    ""teacher"": value.teacherSubject.teacher.name
                                };
                                data.push(obj);
                            });

                            $('#example').dataTable().fnClearTable();
                            $('#example').dataTable().fnDestroy();
                            $('#example').DataTable({
                                data: data,
                                columns: [
                                    { ""data"": ""school"" },
                                    { ""data"": ""address"" },
                                    { ""data"": ""student"" },
                                    { ""data"": ""dob"" },
                                    { ""data"": ""grade"" },
                                    { ""data"": ""subject"" },
                                    { ""data"": ""marks"" },
                                    { ""data"": ""teacher"" },
            ");
                WriteLiteral(@"                    ],
                                pageLength: 6,
                                lengthMenu: [[6, 12, -1], [6, 12, 'All']]
                            });
                        });
                },


                Save: function () {
                    if (this.Validate()) {
                        const data = this.inputModel;
                        axios.post(""/Student/Save"", data)
                            .then(response => {
                                //this.GetAll();
                                //this.ResetInput();
                            });
                    }                    
                },
            }
        })
    </script>

");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
